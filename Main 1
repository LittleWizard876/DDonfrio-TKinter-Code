import re
import tkinter as tk
from tkinter import Toplevel, PhotoImage, messagebox

#this is the abbreviation length
MAX_LENGTH = 10

#abbreviate text shortens the words used in question buttons so that i don't over display onto the text boxes.
#it also makes calling on the same text easier since it is the only text used for the question box in question.
def abbreviate_text(text, max_length):
    return text if len(text) <= max_length else text[:max_length] + '...'

#show question info shows you text for the button you clicked on question 1-8
def show_question_info(question_text):
    info_window = Toplevel(root)
    info_window.title("Question Information")
    info_window.geometry("200x100")

    info_label = tk.Label(info_window, text=question_text, wraplength=180)
    info_label.pack(padx=10, pady=10)

    close_button = tk.Button(info_window, text="Close", command=info_window.destroy)
    close_button.pack(pady=5)

#clean input checks for symbols
def clean_input(input_text):

    return re.sub(r'[^a-zA-Z0-9]', '', input_text)

#Validate inputs checks for empty boxes
def validate_inputs(entries):
    for entry in entries:
        cleaned_text = clean_input(entry.get())
        entry.delete(0, tk.END)
        entry.insert(0, cleaned_text)
        if cleaned_text.strip() == "":
            return False
    return True

#def save main window will define what the save button on the main window does
def save_main_window_data():
    entries = [text_box1, text_box2, text_box3, text_box4]
    if not validate_inputs(entries):
        messagebox.showwarning("Validation Error", "Please fill in all fields with valid characters before saving.")
        return

    data = {
        "text_box1": text_box1.get(),
        "text_box2": text_box2.get(),
        "text_box3": text_box3.get(),
        "text_box4": text_box4.get(),
    }
    with open("main_window_data.txt", "w") as file:
        for key, value in data.items():
            file.write(f"{key}: {value}\n")
    print("Main Window Data saved to main_window_data.txt")

#def save second window will define what the save button on the second window does
def save_second_window_data():
    entries = [second_text_box1, second_text_box2, second_text_box3, second_text_box4]
    if not validate_inputs(entries):
        messagebox.showwarning("Validation Error", "Please fill in all fields with valid characters before saving.")
        return

    data = {
        "text_box1": second_text_box1.get(),
        "text_box2": second_text_box2.get(),
        "text_box3": second_text_box3.get(),
        "text_box4": second_text_box4.get(),
    }
    with open("second_window_data.txt", "w") as file:
        for key, value in data.items():
            file.write(f"{key}: {value}\n")
    print("Second Window Data saved to second_window_data.txt")

#Open second window defines what the next button does
def open_second_window():
    global second_window, second_text_box1, second_text_box2, second_text_box3, second_text_box4

    second_window = Toplevel(root)
    second_window.title("Continued Census")
    second_window.geometry("600x322")

    try:
        image = PhotoImage(file=r"C:\Users\Milo\Desktop\Screenshot 2024-07-25 091201.png")
        image_label = tk.Label(second_window, image=image)
        image_label.image = image
        image_label.grid(row=0, column=2, rowspan=5, padx=10, pady=5)
    except Exception as e:
        print(f"Error loading image: {e}")

    questions = ["Question 5: How much Money do you make per year", "Question 6: What is your ethnicity",
                 "Question 7: Do you have children", "Question 8: How many jobs have you had in the past year"]
    for i, question in enumerate(questions):
        abbrev_question = abbreviate_text(question, MAX_LENGTH)
        question_button = tk.Button(second_window, text=abbrev_question, command=lambda q=question: show_question_info(q))
        question_button.grid(row=i, column=0, padx=10, pady=5)

        text_box = tk.Entry(second_window)
        text_box.grid(row=i, column=1, padx=10, pady=5)
        globals()[f'second_text_box{i+1}'] = text_box

    save_button = tk.Button(second_window, text="Save", command=save_second_window_data)
    save_button.grid(row=4, column=0, padx=5, pady=10)

    exit_button = tk.Button(second_window, text="Exit", command=exit_application)
    exit_button.grid(row=4, column=1, padx=5, pady=10)

## def exit_app is used to define what the exit will do
def exit_application():
    root.destroy()
    if 'second_window' in globals():
        second_window.destroy()

root = tk.Tk()
root.title("Census Window")
root.geometry("600x322")

questions = ["Question 1: Please enter your name", "Question 2: Please enter your age",
             "Question 3: Please enter your address", "Question 4: How many people live in your household"]
for i, question in enumerate(questions):
    abbrev_question = abbreviate_text(question, MAX_LENGTH)
    question_button = tk.Button(root, text=abbrev_question, command=lambda q=question: show_question_info(q))
    question_button.grid(row=i, column=0, padx=10, pady=5)

    text_box = tk.Entry(root)
    text_box.grid(row=i, column=1, padx=10, pady=5)
    globals()[f'text_box{i+1}'] = text_box

save_button = tk.Button(root, text="Save", command=save_main_window_data)
save_button.grid(row=4, column=0, padx=5, pady=10)

open_button = tk.Button(root, text="Next", command=open_second_window)
open_button.grid(row=4, column=1, padx=5, pady=10)

exit_button = tk.Button(root, text="Exit", command=exit_application)
exit_button.grid(row=6, column=2, padx=20, pady=30)

image = PhotoImage(file=r"C:\Users\Milo\PycharmProjects\Screenshot 2024-07-15 201504.png")
image_label = tk.Label(root, image=image)
image_label.grid(row=0, column=2, rowspan=5, padx=10, pady=5)

root.mainloop()
